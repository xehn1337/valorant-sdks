// BlueprintGeneratedClass Gun.Gun_C
// Size: 0x1218 (Inherited: 0xed0)
struct AGun_C : AAresEquippable {
	struct FPointerToUberGraphFrame UberGraphFrame; // 0xed0(0x08)
	struct UComp_Gun_FlaggedErrorCurve_C* Comp_Gun_FlaggedErrorCurve; // 0xed8(0x08)
	struct UAmmoResourceVisualizationComponent* AmmoResourceVisualization; // 0xee0(0x08)
	struct UStabilityComponent* Stability_Mobile; // 0xee8(0x08)
	struct UStabilityVisualizationComponent* StabilityVisualization_Mobile; // 0xef0(0x08)
	struct UComp_Gun_FlaggedStability_C* Comp_Gun_FlaggedStability_Mobile; // 0xef8(0x08)
	struct UAIPerceptionStimuliSourceComponent* AIPerceptionStimuliSource; // 0xf00(0x08)
	struct UStabilityComponent* FlaggedStability; // 0xf08(0x08)
	struct UStabilityVisualizationComponent* FlaggedStabilityVisualization; // 0xf10(0x08)
	struct UComp_Gun_FlaggedStability_C* Comp_Gun_FlaggedStability; // 0xf18(0x08)
	struct UGunVOComponent_C* GunVOComponent; // 0xf20(0x08)
	struct UStaticMeshComponent* SecondaryMagazine_1P; // 0xf28(0x08)
	struct UAresAudioComponentManagerComponent* AresAudioComponentManager; // 0xf30(0x08)
	struct UAresOutlineComponent* OutlineCosmetic1P; // 0xf38(0x08)
	struct USkeletalMeshComponent* CosmeticMesh1P; // 0xf40(0x08)
	struct UPostProcessComponent* WeaponPostProcessComponent; // 0xf48(0x08)
	struct UEffectManagerComponent* EffectManager; // 0xf50(0x08)
	struct UCapsuleComponent* UsableAimingShape; // 0xf58(0x08)
	struct UEquipStateComponent* EquipState; // 0xf60(0x08)
	struct UReadyingStateComponent* ReadyingState; // 0xf68(0x08)
	struct UAresOutlineComponent* OutlineMagazine1P; // 0xf70(0x08)
	struct UAresOutlineComponent* Outline1P; // 0xf78(0x08)
	struct UAresOutlineComponent* Outline3P; // 0xf80(0x08)
	struct UStaticMeshComponent* Magazine_1P; // 0xf88(0x08)
	struct UBulletComponent_C* BulletComponent; // 0xf90(0x08)
	struct UStabilityVisualizationManagerComponent* StabilityVisualizationManager; // 0xf98(0x08)
	struct UEjectablesComponent* EjectableComponent; // 0xfa0(0x08)
	struct UEquippableAnimGraphComponent* EquippableAnimGraph; // 0xfa8(0x08)
	struct UAmmoComponent* ReserveAmmo; // 0xfb0(0x08)
	struct UAmmoComponent* MagazineAmmo; // 0xfb8(0x08)
	struct UCrosshairComponent* CrosshairComponent; // 0xfc0(0x08)
	struct UTaggingLevelComponent* TaggingLevel; // 0xfc8(0x08)
	struct UStabilityVisualizationComponent* StabilityVisualization; // 0xfd0(0x08)
	struct UStabilityComponent* Stability; // 0xfd8(0x08)
	struct UReloadStateComponent* ReloadState; // 0xfe0(0x08)
	struct UFiringStateComponent* FiringState; // 0xfe8(0x08)
	struct UScriptStateComponent* IdleState; // 0xff0(0x08)
	float Timeline_0_Gradient_4FE0012341ACC25BAD5474AD60A43FDB; // 0xff8(0x04)
	enum class ETimelineDirection Timeline_0__Direction_4FE0012341ACC25BAD5474AD60A43FDB; // 0xffc(0x01)
	char pad_FFD[0x3]; // 0xffd(0x03)
	struct UTimelineComponent* Timeline_1; // 0x1000(0x08)
	float RotateRoll; // 0x1008(0x04)
	float ResetDelaySeconds; // 0x100c(0x04)
	float TimeToRotate; // 0x1010(0x04)
	bool ResetDelay; // 0x1014(0x01)
	char pad_1015[0x3]; // 0x1015(0x03)
	struct FRotator HackRotator; // 0x1018(0x0c)
	struct FRotator DefaultRotator; // 0x1024(0x0c)
	float RotatePitch; // 0x1030(0x04)
	float RotateAngle; // 0x1034(0x04)
	struct UMaterialInstanceDynamic* WeaponDynamicMaterialInstance; // 0x1038(0x08)
	float GradientSubtract; // 0x1040(0x04)
	bool IntentionOn; // 0x1044(0x01)
	char pad_1045[0x3]; // 0x1045(0x03)
	struct FVector L_Hand_Offset_Hack; // 0x1048(0x0c)
	char pad_1054[0x4]; // 0x1054(0x04)
	struct UParticleSystemComponent* BeamFX; // 0x1058(0x08)
	struct USceneComponent* MeshToChoose; // 0x1060(0x08)
	struct FVector IntentionEndPointCheck; // 0x1068(0x0c)
	char pad_1074[0x4]; // 0x1074(0x04)
	struct UAkAudioEvent* Gun_Bounce_Sound; // 0x1078(0x08)
	struct UAkAudioEvent* Gun_Land_Sound; // 0x1080(0x08)
	bool HasLastShotAnim; // 0x1088(0x01)
	char pad_1089[0x7]; // 0x1089(0x07)
	struct UAnimMontage* FidgetAnim; // 0x1090(0x08)
	struct UStaticMeshComponent* Magazine_3p; // 0x1098(0x08)
	struct UMaterial* KillBannerMaterial; // 0x10a0(0x08)
	enum class EKillBannerAnimation KillBannerWidgetAnimation; // 0x10a8(0x01)
	char pad_10A9[0x3]; // 0x10a9(0x03)
	struct FLinearColor KillBannerChromaColor; // 0x10ac(0x10)
	bool KillBannerUseChromaColor; // 0x10bc(0x01)
	char pad_10BD[0x3]; // 0x10bd(0x03)
	struct FEffectID FXC_Equipped_ID; // 0x10c0(0x20)
	struct AEffectContainer* EquippedEffect; // 0x10e0(0x08)
	struct FEffectData EffectData; // 0x10e8(0x58)
	struct AEffectContainer* Weapon Inspect; // 0x1140(0x08)
	struct AEffectContainer* Idle Effect; // 0x1148(0x08)
	int32_t AudioNumLimit; // 0x1150(0x04)
	char pad_1154[0x4]; // 0x1154(0x04)
	struct UMaterialInstanceDynamic* LowAmmo_Instance; // 0x1158(0x08)
	struct UMaterialInterface* LowAmmo_Material; // 0x1160(0x08)
	struct UMaterialInterface* NewVar_1; // 0x1168(0x08)
	bool CanDoAmmoCosmetics; // 0x1170(0x01)
	char pad_1171[0x7]; // 0x1171(0x07)
	struct AEffectContainer* FXC_LowAmmo; // 0x1178(0x08)
	struct FEffectID LowAmmo_ID; // 0x1180(0x20)
	struct FVector Muzzle Location; // 0x11a0(0x0c)
	bool HasSilencer; // 0x11ac(0x01)
	char pad_11AD[0x3]; // 0x11ad(0x03)
	struct FEffectID InspectEffectID; // 0x11b0(0x20)
	enum class GunEjectableType ShellCasingEjectableType; // 0x11d0(0x01)
	char pad_11D1[0x3]; // 0x11d1(0x03)
	int32_t AutomaticAndBurstShotsPerShellCasingEjectable; // 0x11d4(0x04)
	int32_t NonAutomaticShotsPerShellCasingEjectable; // 0x11d8(0x04)
	int32_t CurrentShotIndexForShellCasingEjectable; // 0x11dc(0x04)
	float LastShotTimeStamp; // 0x11e0(0x04)
	float CurrentShotIndexResetTimeDurationForNonAutomatics; // 0x11e4(0x04)
	enum class TextureAssetType EjectableTextureType; // 0x11e8(0x01)
	char pad_11E9[0x7]; // 0x11e9(0x07)
	struct AEffectContainer* BombDefusedEffect; // 0x11f0(0x08)
	bool Auto Reload On Empty; // 0x11f8(0x01)
	bool Inspect Animation Active; // 0x11f9(0x01)
	char pad_11FA[0x2]; // 0x11fa(0x02)
	float AutoPrimaryRefireDelay; // 0x11fc(0x04)
	int32_t Kill Number; // 0x1200(0x04)
	char pad_1204[0x4]; // 0x1204(0x04)
	struct FMulticastInlineDelegate OnGunModified; // 0x1208(0x10)
};

